# Copyright (C) 2019  Qian Yu
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

language: cpp
dist: xenial
sudo: false

branches:
  only:
    - master
    - dev

jobs:
  include:
    # ubuntu 16.04, clang-6.0 c++14, lint
    - stage: Lint
      env: VER=6.0 CMAKE_CXX_STANDARD=14 INTEGRAL_SWITCH_LINT=ON
      compiler: clang
      os: linux
      addons: { apt: { packages: ["clang-6.0", "clang-tidy-6.0", "clang-format-6.0"] } }

    # ubuntu 16.04, gcc-4.9, c++11
    - env: VER=4.9 CMAKE_CXX_STANDARD=11
      compiler: gcc
      os: linux
      addons: { apt: { packages: ["g++-4.9"], sources: ["ubuntu-toolchain-r-test"] } }

    # ubuntu 16.04, gcc-4.9, c++14
    - env: VER=4.9 CMAKE_CXX_STANDARD=14
      compiler: gcc
      os: linux
      addons: { apt: { packages: ["g++-4.9"], sources: ["ubuntu-toolchain-r-test"] } }

    # ubuntu 16.04, gcc-5, c++11
    - env: VER=5 CMAKE_CXX_STANDARD=11
      compiler: gcc
      os: linux
      addons: { apt: { packages: ["g++-5"], sources: ["ubuntu-toolchain-r-test"] } }

    # ubuntu 16.04, gcc-5, c++14
    - env: VER=5 CMAKE_CXX_STANDARD=14
      compiler: gcc
      os: linux
      addons: { apt: { packages: ["g++-5"], sources: ["ubuntu-toolchain-r-test"] } }

    # ubuntu 16.04, gcc-6, c++11
    - env: VER=6 CMAKE_CXX_STANDARD=11
      compiler: gcc
      os: linux
      addons: { apt: { packages: ["g++-6"], sources: ["ubuntu-toolchain-r-test"] } }

    # ubuntu 16.04, gcc-6, c++14
    - env: VER=6 CMAKE_CXX_STANDARD=14
      compiler: gcc
      os: linux
      addons: { apt: { packages: ["g++-6"], sources: ["ubuntu-toolchain-r-test"] } }

    # ubuntu 16.04, gcc-7, c++11
    - env: VER=7 CMAKE_CXX_STANDARD=11
      compiler: gcc
      os: linux
      addons: { apt: { packages: ["g++-7"], sources: ["ubuntu-toolchain-r-test"] } }

      # ubuntu 16.04, gcc-7, c++14
    - env: VER=7 CMAKE_CXX_STANDARD=14
      compiler: gcc
      os: linux
      addons: { apt: { packages: ["g++-7"], sources: ["ubuntu-toolchain-r-test"] } }

    # ubuntu 16.04, gcc-8, c++11
    - env: VER=8 CMAKE_CXX_STANDARD=11
      compiler: gcc
      os: linux
      addons: { apt: { packages: ["g++-8"], sources: ["ubuntu-toolchain-r-test"] } }

      # ubuntu 16.04, gcc-8, c++14
    - env: VER=8 CMAKE_CXX_STANDARD=14
      compiler: gcc
      os: linux
      addons: { apt: { packages: ["g++-8"], sources: ["ubuntu-toolchain-r-test"] } }

      # ubuntu 16.04, gcc-8, c++17
    - env: VER=8 CMAKE_CXX_STANDARD=17
      compiler: gcc
      os: linux
      addons: { apt: { packages: ["g++-8"], sources: ["ubuntu-toolchain-r-test"] } }

    # ubuntu 16.04, clang-5.0 c++11
    - env: VER=5.0 CMAKE_CXX_STANDARD=11
      compiler: clang
      os: linux
      addons: { apt: { packages: ["clang-5.0"] } }

    # ubuntu 16.04, clang-5.0 c++14
    - env: VER=5.0 CMAKE_CXX_STANDARD=14
      compiler: clang
      os: linux
      addons: { apt: { packages: ["clang-5.0"] } }

    # ubuntu 16.04, clang-5.0 c++17
    - env: VER=5.0 CMAKE_CXX_STANDARD=17
      compiler: clang
      os: linux
      addons: { apt: { packages: ["clang-5.0"] } }

    # ubuntu 16.04, clang-6.0 c++11
    - env: VER=6.0 CMAKE_CXX_STANDARD=11
      compiler: clang
      os: linux
      addons: { apt: { packages: ["clang-6.0"] } }

    # ubuntu 16.04, clang-6.0 c++14
    - env: VER=6.0 CMAKE_CXX_STANDARD=14
      compiler: clang
      os: linux
      addons: { apt: { packages: ["clang-6.0"] } }

    # OS X Sierra 10.12
    - env: CMAKE_CXX_STANDARD=11
      compiler: clang
      os: osx
      osx_image: xcode8.3

    # OS X Sierra 10.12
    - env: CMAKE_CXX_STANDARD=14
      compiler: clang
      os: osx
      osx_image: xcode8.3

    # OS X High Sierra 10.13
    - env: CMAKE_CXX_STANDARD=11
      compiler: clang
      os: osx
      osx_image: xcode9.4

    # OS X High Sierra 10.13
    - env: CMAKE_CXX_STANDARD=14
      compiler: clang
      os: osx
      osx_image: xcode9.4

    # OS X High Sierra 10.13
    - env: CMAKE_CXX_STANDARD=11
      compiler: clang
      os: osx
      osx_image: xcode10.1

    # OS X High Sierra 10.13
    - env: CMAKE_CXX_STANDARD=14
      compiler: clang
      os: osx
      osx_image: xcode10.1

install:
  # Upgrade CMake
  - |
    if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
      brew update
      brew upgrade cmake
    fi
  - cmake --version
  # Set the correct `CC` and `CXX` environment variables.
  - |
    if [ -n "${VER}" ]; then
      export CC="${CC}-${VER}"
      export CXX="${CXX}-${VER}"
    fi
  - ${CXX} --version

script:
  - |
    if [ "${INTEGRAL_SWITCH_LINT}" == "ON" ];
    then
      mkdir build-lint;
      cd build-lint;
      cmake -DCMAKE_CXX_FLAGS="-Wall -Werror -fdiagnostics-color=always" -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=${CMAKE_CXX_STANDARD} -DINTEGRAL_SWITCH_LINT=ON ..;
      make lint;
      cmake --build .;
    else
      export BUILD_DIR="build-${CC}-${VER}-${CMAKE_CXX_STANDARD}";
      mkdir ${BUILD_DIR};
      cd ${BUILD_DIR};
      cmake -DCMAKE_CXX_FLAGS="-Wall -Werror -fdiagnostics-color=always" -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=${CMAKE_CXX_STANDARD} ..;
      cmake --build .;
      ctest --output-on-failure;
    fi

notifications:
  email: false
