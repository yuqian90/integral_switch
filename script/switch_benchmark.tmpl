/*
 * switch_benchmark.h Used for benchmarking.
 * Copyright (C) 2019  Qian Yu
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#include <cstddef>

#ifndef SWITCH_BENCHMARK_H_
#define SWITCH_BENCHMARK_H_

namespace integral_switch{

template <std::size_t N> static inline constexpr std::size_t switch_case_get(std::size_t value) noexcept;


{% for height in range(1, number + 1) -%}
template<> inline constexpr std::size_t switch_case_get<{{height}}>(std::size_t value) noexcept {
    switch(value)
    {
        {% for i in range(height) -%}
        case {{ i }}: return {{ i }};
        {% endfor -%}
        default: return 0;
    }
}

{% endfor -%}

}
#endif
